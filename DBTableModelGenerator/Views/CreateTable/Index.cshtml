@using DBTableModelGenerator.Models;
@model DBTableModelGenerator.Models.CreateTableViewModel
@{
    /**/

    ViewBag.Title = "Home Page";
}

@section css{
    <link href="~/Scripts/jsGrid_v1.5.3/jsgrid.min.css" rel="stylesheet" />
    <link href="~/Scripts/jsGrid_v1.5.3/jsgrid-theme.min.css" rel="stylesheet" />
}

@using (Html.BeginForm("Generate", "CreateTable", FormMethod.Post))
{
    <br />
    <div class="form-group row">
        <div class="col-sm-12">
            <label class="control-label">
                Connection String
            </label>
            @Html.TextBoxFor(x => x.ConnectionString, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group row">
        <div class="col-sm-2">
            <label class="control-label">
                Schema
            </label>
            @Html.TextBoxFor(x => x.Schema, new { @class = "form-control" })
        </div>
        <div class="col-sm-2">
            <label class="control-label">
                Table Name
            </label>
            @Html.TextBoxFor(x => x.TableName, new { @class = "form-control" })
        </div>
        <div class="col-sm-3">
            <label class="control-label">
                Table Description
            </label>
            @Html.TextBoxFor(x => x.TableDescription, new { @class = "form-control", @Value = Model.TableDescription })
        </div>
    </div>
    <button type="submit" id="btnLoadDB" class="btn btn-success" formaction="@Url.Action("LoadDB", "CreateTable")">LoadDB</button>
    <hr />
    <div class="form-group row">
        <ul class="nav nav-tabs">
            <li class="active">
                <a href="#divGrid" data-toggle="tab">Grid UI</a>
            </li>
            <li>
                <a href="#divScript" data-toggle="tab" id="tabScript">Script</a>
            </li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active" id="divGrid">
                <div id="jsGrid">

                </div>
                <button type="button" id="btnGenScript" class="btn btn-default">Gen Script</button>
            </div>
            <div class="tab-pane" id="divScript">
                <textarea class="form-control" rows="15" id="txtScript" name="Script"></textarea>
                <button type="submit" id="btnCreateTable" class="btn btn-success" formaction="@Url.Action("CreateTable", "CreateTable")">CreateTable</button>
            </div>
        </div>

    </div>


}

@section scripts{
    <script src="~/Scripts/jsGrid_v1.5.3/jsgrid.min.js"></script>
    <script type="text/javascript">
        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",

            inserting: true,
            editing: true,
            sorting: false,
            paging: false,

            data: @Html.Raw(JavaScriptObjectParser.Parse(Model.Columns)),
            fields: [
                { name: "Name", type: "text", },
                { name: "Type", type: "text", },
                { name: "Length", type: "number", width: 50, align: 'center' },
                { name: "IsIdentity", type: "checkbox", width: 30, title: 'id?' },
                { name: "IsNotNull", type: "checkbox", width: 40, title: 'not null?'},
                { name: "Default", type: "text", },
                { name: "ForeignKey", type: "text", title: 'ForeignKey'},
                { name: "Description", type: "text", },
                { type: "control" }
            ],
        });

        jsGrid.loadStrategies.DirectLoadingStrategy.prototype.finishInsert = function (insertItem) {
            var grid = this._grid;
            var arr = grid.option('data');
            var idxInsert = arr.length;
            for (idxInsert = 0; idxInsert < arr.length; idxInsert++) {
                if (arr[idxInsert].Name == 'CreateUser') {
                    arr.splice(idxInsert, 0, insertItem);
                    grid.refresh();
                    return;
                }
            }

            arr.push(insertItem);
            grid.refresh();
        }

        $("#btnGenScript").click(function (e) {
            $.ajax({
                url: '@Url.Action("GenScript", "CreateTable")',
                type: 'POST',
                data: {
                    ConnectionString: $("#ConnectionString").val(),
                    TableName: $("#TableName").val(),
                    Schema: $("#Schema").val(),
                    TableDescription: $("#TableDescription").val(),
                    Columns: $("#jsGrid").jsGrid('option', 'data'),
                },
            }).done(function (resp) {
                $("#txtScript").val(resp);
                $("#tabScript").click();
            });
        });

    </script>
}